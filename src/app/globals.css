/* Tailwind CSS directives */
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Base configuration */
    --radius: 0.5rem;

    /* CSS VARIABLES - NO HARDCODED VALUES */
    /* All values are set dynamically by ThemeContext/Settings */
    /* These are just placeholders - real values come from Settings Appearance */
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;
    --card: 0 0% 0%;
    --card-foreground: 0 0% 100%;
    --primary: 0 0% 50%;
    --primary-foreground: 0 0% 100%;
    --secondary: 0 0% 50%;
    --secondary-foreground: 0 0% 100%;
    --accent: 0 0% 50%;
    --accent-foreground: 0 0% 100%;
    --muted: 0 0% 25%;
    --muted-foreground: 0 0% 75%;
    --border: 0 0% 50%;
    --input: 0 0% 50%;
    --ring: 0 0% 50%;
    --destructive: 0 100% 50%;
    --destructive-foreground: 0 0% 100%;
    --system-text: 0 0% 88%;
    --popover: var(--card);
    --popover-foreground: var(--card-foreground);

    /* Additional colors - also controlled by settings */
    --success: 0 100% 50%;
    --warning: 60 100% 50%;
    --info: 200 100% 50%;
    --code-background: 0 0% 10%;
    --code-border: 0 0% 20%;
  }

  /* Global theme enforcement - ensure all elements respect theme variables */
  /* Removed global border-color override - let components define their own borders */

  body {
    background-color: hsl(var(--background)) !important;
    color: hsl(var(--foreground)) !important;
  }

  /* Modern Interface Specific Styles */
  .modern-chat-interface {
    --modern-bg-primary: #0a0a0a;
    --modern-bg-secondary: #1a1a1a;
    --modern-bg-tertiary: #2a2a2a;
    --modern-border: #333333;
    --modern-text-primary: #ffffff;
    --modern-text-secondary: #a0a0a0;
    --modern-text-muted: #666666;
    --modern-accent-blue: #3b82f6;
    --modern-accent-green: #10b981;
    --modern-accent-purple: #8b5cf6;
  }

  /* Ensure proper scrollbar styling for modern interface */
  .modern-chat-interface ::-webkit-scrollbar {
    width: 6px;
  }

  .modern-chat-interface ::-webkit-scrollbar-track {
    background: transparent;
  }

  .modern-chat-interface ::-webkit-scrollbar-thumb {
    background: #333333;
    border-radius: 3px;
  }

  .modern-chat-interface ::-webkit-scrollbar-thumb:hover {
    background: #444444;
  }

  /* Ensure all text elements use theme colors */
  h1, h2, h3, h4, h5, h6, p, span, div, label {
    color: inherit !important;
  }

  /* Fix icon color inheritance - ensure all SVG icons inherit proper colors */
  svg, .lucide, [data-lucide] {
    color: inherit !important;
  }

  /* Fix button text and icon colors specifically */
  button, .button, [role="button"] {
    color: hsl(var(--foreground)) !important;
  }

  button svg, .button svg, [role="button"] svg {
    color: inherit !important;
  }

  /* Fix dropdown and select text colors */
  select, .select, [role="combobox"] {
    color: hsl(var(--foreground)) !important;
  }

  /* Fix ALL text elements to use proper theme colors */
  input, textarea, label, span, div, p, h1, h2, h3, h4, h5, h6 {
    color: inherit !important;
  }

  /* Force specific problematic elements */
  .text-foreground {
    color: hsl(var(--foreground)) !important;
  }

  /* Fix muted text to be more visible */
  .text-muted-foreground {
    color: hsl(var(--muted-foreground)) !important;
    opacity: 1 !important; /* Ensure no transparency issues */
  }

  /* Ensure muted text has minimum contrast */
  .text-muted-foreground,
  p.text-muted-foreground,
  span.text-muted-foreground,
  div.text-muted-foreground {
    color: hsl(var(--muted-foreground)) !important;
    opacity: 1 !important;
  }

  /* Ensure placeholder text is visible */
  ::placeholder {
    color: hsl(var(--muted-foreground)) !important;
    opacity: 0.8 !important;
  }

  /* Fix tab navigation text */
  [role="tab"], .tab, .nav-item {
    color: hsl(var(--foreground)) !important;
  }

  /* Fix form labels and inputs */
  .form-label, .input-label, fieldset legend {
    color: hsl(var(--foreground)) !important;
  }

  /* Removed destructive global button styling that broke the interface */
}

@layer base {
  * {
    /* Removed global border - was causing thick borders everywhere */
  }

  /* Hide scrollbars but keep scrolling functionality */
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }

  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }

  /* Smooth scrolling for chat messages */
  .chat-messages {
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch; /* iOS momentum scrolling */
  }

  /* Enhanced smooth scrolling for all scrollable elements */
  .scrollable {
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
  }

  /* Smooth scrolling for the entire document */
  html {
    scroll-behavior: smooth;
  }

  /* Optimize font rendering */
  * {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Clean base styling - no forced decorations */
  html {
    background: var(--background);
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
    margin: 0;
    padding: 0;
  }

  #__next {
    background: var(--background);
    width: 100%;
    height: 100%;
    position: relative;
    margin: 0;
  }

  /* Force main app container background */
  .h-screen.w-full {
    background: var(--background) !important;
    color: var(--foreground) !important;
  }

  /* Force all main containers */
  html, body, #__next, [class*="h-screen"], [class*="w-full"] {
    background-color: var(--background) !important;
    color: var(--foreground) !important;
  }

  /* Force rounded corners on all elements */
  * {
    box-sizing: border-box !important;
  }

  /* Simplified styling using CSS variables */
  .card {
    background: var(--card) !important;
    border: none !important;
    color: var(--card-foreground) !important;
    border-radius: 16px !important;
    word-wrap: break-word !important; /* Ensure text wrapping */
    overflow-wrap: break-word !important; /* Ensure text wrapping */
  }

  /* Dialog content styling */
  [data-radix-dialog-content] {
    background: hsl(var(--background)) !important;
    border: none !important;
    color: hsl(var(--foreground)) !important;
    border-radius: 8px !important;
  }

  /* CRITICAL: Force all text in dialogs to use theme colors */
  [data-radix-dialog-content] *,
  [data-radix-dialog-content] h1,
  [data-radix-dialog-content] h2,
  [data-radix-dialog-content] h3,
  [data-radix-dialog-content] h4,
  [data-radix-dialog-content] h5,
  [data-radix-dialog-content] h6,
  [data-radix-dialog-content] p,
  [data-radix-dialog-content] span,
  [data-radix-dialog-content] div,
  [data-radix-dialog-content] label {
    color: hsl(var(--foreground)) !important;
  }

  /* Force muted text in dialogs */
  [data-radix-dialog-content] .text-muted-foreground {
    color: hsl(var(--muted-foreground)) !important;
  }

  /* Force primary text in dialogs */
  [data-radix-dialog-content] .text-primary {
    color: hsl(var(--primary)) !important;
  }

  /* Force prompt grid items in dialogs */
  [data-radix-dialog-content] .grid > div {
    background: transparent !important;
    color: hsl(var(--foreground)) !important;
    border: 1px solid hsl(var(--border)) !important;
  }

  [data-radix-dialog-content] .grid > div:hover {
    background: hsl(var(--muted) / 0.5) !important;
    color: hsl(var(--foreground)) !important;
  }

  /* NUCLEAR OPTION: Force ALL text in ANY dialog to be visible */
  [role="dialog"] *,
  [role="dialog"] h1,
  [role="dialog"] h2,
  [role="dialog"] h3,
  [role="dialog"] h4,
  [role="dialog"] h5,
  [role="dialog"] h6,
  [role="dialog"] p,
  [role="dialog"] span,
  [role="dialog"] div,
  [role="dialog"] label {
    color: hsl(var(--foreground)) !important;
  }

  [role="dialog"] .text-muted-foreground {
    color: hsl(var(--muted-foreground)) !important;
  }

  /* Force dialog background */
  [role="dialog"] {
    background: hsl(var(--background)) !important;
    color: hsl(var(--foreground)) !important;
  }

  /* ULTIMATE NUCLEAR OPTION: Maximum specificity for prompt text */
  html body [data-radix-dialog-content] div.space-y-4 div.grid div h3,
  html body [data-radix-dialog-content] div.space-y-4 div.grid div p,
  html body [data-radix-dialog-content] div.space-y-4 div.grid div div {
    color: hsl(var(--foreground)) !important;
  }

  html body [data-radix-dialog-content] div.space-y-4 div.grid div p.text-muted-foreground,
  html body [data-radix-dialog-content] div.space-y-4 div.grid div div.text-muted-foreground {
    color: hsl(var(--muted-foreground)) !important;
  }

  /* Force all text elements to inherit color */
  * {
    color: inherit;
  }

  /* Ensure ActionMenuOverlay uses proper theme colors */
  .action-menu-overlay {
    background: hsl(var(--background)) !important;
    color: hsl(var(--foreground)) !important;
  }

  .action-menu-overlay * {
    color: inherit !important;
  }

  /* CRITICAL: Force main chat textarea to have white text */
  .chat-interface textarea,
  [data-chat-input] textarea,
  textarea[placeholder*="Type your message"],
  textarea[placeholder*="message"] {
    background: hsl(var(--input)) !important;
    color: hsl(var(--foreground)) !important;
    border: 1px solid hsl(var(--border)) !important;
  }

  /* NUCLEAR OPTION: Force ALL textareas to use theme colors */
  textarea {
    background: hsl(var(--input)) !important;
    color: hsl(var(--foreground)) !important;
  }

  /* Force placeholder text to be visible */
  textarea::placeholder,
  input::placeholder {
    color: hsl(var(--muted-foreground)) !important;
  }

  /* SETTINGS SPECIFIC FIXES */
  /* Force all settings text to be visible */
  .settings-overlay,
  .settings-overlay * {
    color: hsl(var(--foreground)) !important;
  }

  /* Settings muted text - ensure good contrast */
  .settings-overlay .text-muted-foreground,
  .settings-overlay p.text-muted-foreground,
  .settings-overlay span.text-muted-foreground,
  .settings-overlay .text-xs.text-muted-foreground,
  .settings-overlay .text-sm.text-muted-foreground {
    color: hsl(var(--muted-foreground)) !important;
    opacity: 1 !important; /* Ensure no transparency issues */
  }

  /* Settings labels - ensure high contrast */
  .settings-overlay label,
  .settings-overlay .text-lg,
  .settings-overlay h3 {
    color: hsl(var(--foreground)) !important;
    opacity: 1 !important;
  }

  /* Settings descriptions */
  .settings-overlay p:not(.text-muted-foreground) {
    color: hsl(var(--foreground)) !important;
  }

  /* Ensure all text elements in settings have proper contrast */
  .settings-overlay div,
  .settings-overlay span,
  .settings-overlay p,
  .settings-overlay label,
  .settings-overlay h1,
  .settings-overlay h2,
  .settings-overlay h3,
  .settings-overlay h4,
  .settings-overlay h5,
  .settings-overlay h6 {
    color: hsl(var(--foreground)) !important;
  }

  /* Override any potential black text */
  .settings-overlay [style*="color: black"],
  .settings-overlay [style*="color: #000"],
  .settings-overlay [style*="color: rgb(0, 0, 0)"] {
    color: hsl(var(--foreground)) !important;
  }

  /* NUCLEAR OPTION: Force all text in settings to be visible */
  html body .settings-overlay * {
    color: hsl(var(--foreground)) !important;
  }

  html body .settings-overlay .text-muted-foreground,
  html body .settings-overlay p.text-muted-foreground,
  html body .settings-overlay span.text-muted-foreground {
    color: hsl(var(--muted-foreground)) !important;
  }

  /* CHAT WINDOW TITLE BAR DRAGGING - HIGHEST PRIORITY */
  .chat-title-bar-drag-zone {
    -webkit-app-region: drag !important;
  }

  /* Only make interactive elements non-draggable, not all children */
  .chat-title-bar-drag-zone button,
  .chat-title-bar-drag-zone [role="button"],
  .chat-title-bar-drag-zone input,
  .chat-title-bar-drag-zone select,
  .chat-title-bar-drag-zone textarea {
    -webkit-app-region: no-drag !important;
  }

  /* Force text color in all containers */
  div, span, p, label, h1, h2, h3, h4, h5, h6 {
    color: hsl(var(--foreground)) !important;
  }

  /* Force muted text to be visible */
  .text-muted-foreground,
  p.text-muted-foreground,
  span.text-muted-foreground {
    color: hsl(var(--muted-foreground)) !important;
  }

  /* Force button text to be visible */
  button {
    color: hsl(var(--foreground)) !important;
  }

  /* Force input text to be visible */
  input, textarea {
    color: hsl(var(--foreground)) !important;
    background: hsl(var(--input)) !important;
  }

  /* Removed draggable dialog CSS - now using standard Radix dialog */

  /* Allow buttons to use their own styling */

  /* Exception for toggle switches - allow custom styling */
  button[role="switch"] {
    background: unset !important;
    border: unset !important;
    border-radius: 9999px !important; /* Keep it fully rounded */
  }

  /* Specific styling for enabled toggle switches */
  button[role="switch"][aria-checked="true"] {
    background: hsl(var(--primary)) !important; /* Use theme primary */
    box-shadow: 0 4px 14px 0 hsl(var(--primary) / 0.3) !important;
    border: 2px solid hsl(var(--primary) / 0.5) !important;
    border-radius: 9999px !important; /* Fully rounded */
  }

  button[role="switch"][aria-checked="true"]:hover {
    background: hsl(var(--primary) / 0.8) !important; /* Darker on hover */
    box-shadow: 0 6px 20px 0 hsl(var(--primary) / 0.4) !important;
    border-radius: 9999px !important; /* Fully rounded */
  }

  button[role="switch"][aria-checked="false"] {
    background: hsl(var(--muted-foreground)) !important; /* Use theme muted */
    border: 2px solid hsl(var(--muted-foreground) / 0.3) !important;
    border-radius: 9999px !important; /* Fully rounded */
  }

  /* Input fields with much better visibility */
  input, textarea, select {
    background: hsl(var(--input)) !important; /* Use theme input background */
    color: hsl(var(--foreground)) !important; /* Force white text */
    border: 2px solid hsl(var(--border)) !important;
    border-radius: 6px !important;
  }

  /* Force textarea text to be white specifically */
  textarea {
    color: hsl(var(--foreground)) !important;
    background: hsl(var(--input)) !important;
  }

  /* Focus states for input fields */
  input:focus, textarea:focus, select:focus {
    background: hsl(var(--card)) !important; /* Use theme card on focus */
    border-color: hsl(var(--ring)) !important;
    outline: none !important;
    box-shadow: 0 0 0 2px hsl(var(--ring) / 0.2) !important;
  }

  /* Hover states for input fields */
  input:hover, textarea:hover, select:hover {
    background: hsl(var(--muted) / 0.8) !important;
    border-color: hsl(var(--accent)) !important;
  }

  /* CRITICAL: Settings window input fields - force theme colors */
  .settings-overlay input,
  .settings-overlay textarea,
  .settings-overlay select,
  .settings-overlay [data-radix-select-trigger] {
    background: hsl(var(--input)) !important;
    color: hsl(var(--foreground)) !important;
    border: 1px solid hsl(var(--border)) !important;
    border-radius: 6px !important;
  }

  /* Force settings input text to be white */
  .settings-overlay input::placeholder,
  .settings-overlay textarea::placeholder {
    color: hsl(var(--muted-foreground)) !important;
  }

  /* NUCLEAR OPTION: Override hardcoded settings colors */
  .settings-overlay .bg-slate-900,
  .settings-overlay .bg-slate-800,
  .settings-overlay .bg-slate-850 {
    background: hsl(var(--input)) !important;
  }

  .settings-overlay .text-slate-100,
  .settings-overlay .text-slate-200 {
    color: hsl(var(--foreground)) !important;
  }

  .settings-overlay .border-slate-600,
  .settings-overlay .border-slate-700 {
    border-color: hsl(var(--border)) !important;
  }

  /* Auto-resize textarea using CSS field-sizing */
  textarea {
    field-sizing: content !important; /* Native CSS auto-resize */
    resize: none !important; /* Disable manual resize */
    overflow-y: auto !important; /* Show scrollbar when needed */
  }

  /* Specifically target action menu buttons to remove borders */
  .space-y-1 button,
  [class*="space-y"] button,
  button[class*="w-full"],
  button[class*="justify-start"] {
    border: none !important;
    outline: none !important;
    box-shadow: none !important;
  }

  /* Remove global button hover override to allow component-specific hover styles */

  /* Enhanced animations for thinking indicator */
  @keyframes thinking-bounce {
    0%, 80%, 100% {
      transform: scale(0);
      opacity: 0.5;
    }
    40% {
      transform: scale(1);
      opacity: 1;
    }
  }

  .thinking-dot {
    animation: thinking-bounce 1.4s infinite ease-in-out both;
  }

  .thinking-dot:nth-child(1) { animation-delay: -0.32s; }
  .thinking-dot:nth-child(2) { animation-delay: -0.16s; }
  .thinking-dot:nth-child(3) { animation-delay: 0s; }

  /* Scroll to bottom button animations */
  @keyframes scroll-button-bounce {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-2px);
    }
  }

  .scroll-to-bottom-button {
    animation: scroll-button-bounce 2s infinite ease-in-out;
  }

  .scroll-to-bottom-button:hover {
    animation: none;
    transform: scale(1.05);
  }

  /* Chat bubble colors use Tailwind classes - no overrides needed */

  /* Message bubble specific styling - override card defaults */
  .user-message,
  .bg-primary {
    background: hsl(var(--primary) / 0.8) !important; /* Use theme primary with opacity */
    color: hsl(var(--primary-foreground)) !important;
    border-radius: 16px !important; /* Match main app */
    border: none !important; /* Remove all borders */
    word-wrap: break-word !important; /* Fix text overflow */
    overflow-wrap: break-word !important; /* Fix text overflow */
    max-width: 100% !important; /* Ensure proper containment */
  }

  .assistant-message,
  .bg-secondary {
    background: hsl(var(--muted) / 0.7) !important; /* Use theme muted with opacity */
    color: hsl(var(--foreground)) !important; /* Use theme foreground */
    border-radius: 16px !important; /* Match main app */
    border: none !important; /* Remove all borders */
    word-wrap: break-word !important; /* Fix text overflow */
    overflow-wrap: break-word !important; /* Fix text overflow */
    max-width: 100% !important; /* Ensure proper containment */
  }

  /* Ensure card content inherits colors and proper text wrapping */
  .user-message .card-content,
  .user-message [data-radix-card-content],
  .bg-primary .card-content,
  .bg-primary [data-radix-card-content] {
    background: transparent !important;
    color: white !important;
    border: none !important;
    word-wrap: break-word !important;
    overflow-wrap: break-word !important;
    white-space: pre-wrap !important; /* Preserve formatting while allowing wrapping */
  }

  .assistant-message .card-content,
  .assistant-message [data-radix-card-content],
  .bg-secondary .card-content,
  .bg-secondary [data-radix-card-content] {
    background: transparent !important;
    color: white !important;
    border: none !important;
    word-wrap: break-word !important;
    overflow-wrap: break-word !important;
    white-space: pre-wrap !important; /* Preserve formatting while allowing wrapping */
  }

  /* Prevent scaling during drag operations */
  .dragging * {
    transform: none !important;
    zoom: normal !important;
    scale: 1 !important;
    -webkit-transform: none !important;
    -moz-transform: none !important;
    -ms-transform: none !important;
  }
}

@layer components {

  /* Ensure dropdown menus and inputs have solid backgrounds */
  [data-radix-select-content],
  [data-radix-popover-content] {
    background-color: var(--card) !important;
    border: none !important;
    color: var(--card-foreground) !important;
    border-radius: 6px !important;
  }

  /* Ensure input fields have solid backgrounds */
  input, textarea, select {
    background: hsl(var(--input)) !important;
    color: hsl(var(--foreground)) !important;
  }

  /* Solid backgrounds for dropdown items */
  [data-radix-select-item],
  .popover-content > * {
    background-color: var(--muted) !important;
    color: var(--foreground) !important;
  }

  [data-radix-select-item]:hover,
  [data-radix-select-item][data-highlighted] {
    background-color: var(--accent) !important;
  }

  /* Hide scrollbars while maintaining functionality */
  .hide-scrollbar {
    /* Firefox */
    scrollbar-width: none !important;
    /* Safari and Chrome */
    -ms-overflow-style: none !important;
    /* Ensure scrolling still works */
    overflow-y: auto;
    overflow-x: hidden;
    /* Smooth scrolling performance */
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
  }

  .hide-scrollbar::-webkit-scrollbar {
    display: none !important;
    width: 0 !important;
    height: 0 !important;
  }

  .hide-scrollbar::-webkit-scrollbar-track {
    display: none !important;
  }

  .hide-scrollbar::-webkit-scrollbar-thumb {
    display: none !important;
  }

  /* Optimize scrolling for overlay windows */
  .overlay-scroll {
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    /* Remove any conflicting properties */
    will-change: auto;
    transform: none;
    contain: none;
  }



  /* Force hide all scrollbars in chat areas */
  .chat-messages {
    scrollbar-width: none !important;
    -ms-overflow-style: none !important;
  }

  .chat-messages::-webkit-scrollbar {
    display: none !important;
    width: 0 !important;
    height: 0 !important;
  }

  /* Custom themed scrollbar for chat window */
  .custom-scrollbar {
    /* Firefox */
    scrollbar-width: thin;
    scrollbar-color: var(--border) var(--muted);
  }

  .custom-scrollbar::-webkit-scrollbar {
    width: 8px;
  }

  .custom-scrollbar::-webkit-scrollbar-track {
    background: var(--muted);
    border-radius: 4px;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb {
    background: var(--border);
    border-radius: 4px;
    border: 1px solid var(--muted);
  }

  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background: var(--accent);
  }

  .custom-scrollbar::-webkit-scrollbar-thumb:active {
    background: var(--primary);
  }

  .custom-scrollbar::-webkit-scrollbar-corner {
    background: var(--muted);
  }

  /* Apply custom scrollbar globally to all scrollable elements */
  * {
    /* Firefox */
    scrollbar-width: thin;
    scrollbar-color: var(--border) var(--muted);
  }

  *::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  *::-webkit-scrollbar-track {
    background: var(--muted);
    border-radius: 4px;
  }

  *::-webkit-scrollbar-thumb {
    background: var(--border);
    border-radius: 4px;
    border: 1px solid var(--muted);
  }

  *::-webkit-scrollbar-thumb:hover {
    background: var(--accent);
  }

  *::-webkit-scrollbar-corner {
    background: var(--muted);
  }

  /* Global compact spacing and consistent icon sizes */
  .compact-ui {
    /* Reduce all spacing by default */
    --spacing-xs: 0.125rem; /* 2px */
    --spacing-sm: 0.25rem;  /* 4px */
    --spacing-md: 0.5rem;   /* 8px */
    --spacing-lg: 0.75rem;  /* 12px */
    --spacing-xl: 1rem;     /* 16px */

    /* Standard icon size */
    --icon-size: 16px;
  }

  /* Apply compact spacing to common UI elements */
  .compact-ui .space-y-4 > * + * {
    margin-top: var(--spacing-md) !important;
  }

  .compact-ui .space-y-2 > * + * {
    margin-top: var(--spacing-sm) !important;
  }

  .compact-ui .space-y-1 > * + * {
    margin-top: var(--spacing-xs) !important;
  }

  /* Ensure all Lucide icons are consistently sized */
  .lucide, [data-lucide], svg[class*="lucide"] {
    width: var(--icon-size, 16px) !important;
    height: var(--icon-size, 16px) !important;
  }


}
