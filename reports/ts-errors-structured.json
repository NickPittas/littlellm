{
  "typescript_errors": [
    {
      "file_path": "src/components/MessageWithThinking.tsx",
      "line_number": 694,
      "column": 30,
      "error_code": "TS2339",
      "short_description": "Property 'error' does not exist on type",
      "full_description": "Property 'error' does not exist on type '{ id: string; name: string; arguments: Record<string, unknown>; }'",
      "suggested_fix": "Add 'error' property to the type definition or use type assertion/optional chaining (?.error)",
      "category": "Missing Property",
      "severity": "error"
    },
    {
      "file_path": "src/components/MessageWithThinking.tsx",
      "line_number": 699,
      "column": 34,
      "error_code": "TS2339",
      "short_description": "Property 'error' does not exist on type",
      "full_description": "Property 'error' does not exist on type '{ id: string; name: string; arguments: Record<string, unknown>; }'",
      "suggested_fix": "Add 'error' property to the type definition or use type assertion/optional chaining (?.error)",
      "category": "Missing Property",
      "severity": "error"
    },
    {
      "file_path": "src/components/MessageWithThinking.tsx",
      "line_number": 703,
      "column": 35,
      "error_code": "TS2339",
      "short_description": "Property 'error' does not exist on type",
      "full_description": "Property 'error' does not exist on type '{ id: string; name: string; arguments: Record<string, unknown>; }'",
      "suggested_fix": "Add 'error' property to the type definition or use type assertion/optional chaining (?.error)",
      "category": "Missing Property",
      "severity": "error"
    },
    {
      "file_path": "src/components/MessageWithThinking.tsx",
      "line_number": 708,
      "column": 31,
      "error_code": "TS2339",
      "short_description": "Property 'result' does not exist on type",
      "full_description": "Property 'result' does not exist on type '{ id: string; name: string; arguments: Record<string, unknown>; }'",
      "suggested_fix": "Add 'result' property to the type definition or use type assertion/optional chaining (?.result)",
      "category": "Missing Property",
      "severity": "error"
    },
    {
      "file_path": "src/components/MessageWithThinking.tsx",
      "line_number": 719,
      "column": 37,
      "error_code": "TS2339",
      "short_description": "Property 'result' does not exist on type",
      "full_description": "Property 'result' does not exist on type '{ id: string; name: string; arguments: Record<string, unknown>; }'",
      "suggested_fix": "Add 'result' property to the type definition or use type assertion/optional chaining (?.result)",
      "category": "Missing Property",
      "severity": "error"
    },
    {
      "file_path": "src/components/MessageWithThinking.tsx",
      "line_number": 776,
      "column": 49,
      "error_code": "TS2339",
      "short_description": "Property 'error' does not exist on type",
      "full_description": "Property 'error' does not exist on type '{ id: string; name: string; arguments: Record<string, unknown>; }'",
      "suggested_fix": "Add 'error' property to the type definition or use type assertion/optional chaining (?.error)",
      "category": "Missing Property",
      "severity": "error"
    },
    {
      "file_path": "src/components/MessageWithThinking.tsx",
      "line_number": 777,
      "column": 35,
      "error_code": "TS2339",
      "short_description": "Property 'error' does not exist on type",
      "full_description": "Property 'error' does not exist on type '{ id: string; name: string; arguments: Record<string, unknown>; }'",
      "suggested_fix": "Add 'error' property to the type definition or use type assertion/optional chaining (?.error)",
      "category": "Missing Property",
      "severity": "error"
    },
    {
      "file_path": "src/services/providers/AnthropicProvider.ts",
      "line_number": 1051,
      "column": 53,
      "error_code": "TS2552",
      "short_description": "Cannot find name 'settings'",
      "full_description": "Cannot find name 'settings'. Did you mean '_settings'?",
      "suggested_fix": "Change 'settings' to '_settings' as suggested by TypeScript compiler",
      "category": "Variable Name",
      "severity": "error"
    },
    {
      "file_path": "src/services/settingsService.ts",
      "line_number": 324,
      "column": 7,
      "error_code": "TS2741",
      "short_description": "Missing required property 'jan'",
      "full_description": "Property 'jan' is missing in type '{ openai: { lastSelectedModel: string; }; anthropic: { lastSelectedModel: string; }; gemini: { lastSelectedModel: string; }; mistral: { lastSelectedModel: string; }; deepseek: { lastSelectedModel: string; }; ... 7 more ...; n8n: { ...; }; }' but required in type 'ProvidersConfig'",
      "suggested_fix": "Add the missing 'jan' property to the ProvidersConfig object with appropriate default values",
      "category": "Missing Required Property",
      "severity": "error"
    },
    {
      "file_path": "src/tests/settingsReloadBehavior.test.ts",
      "line_number": 93,
      "column": 11,
      "error_code": "TS2741",
      "short_description": "Missing required property 'jan'",
      "full_description": "Property 'jan' is missing in type '{ openai: { lastSelectedModel: string; }; anthropic: { lastSelectedModel: string; }; gemini: { lastSelectedModel: string; }; mistral: { lastSelectedModel: string; }; deepseek: { lastSelectedModel: string; }; ... 7 more ...; n8n: { ...; }; }' but required in type 'ProvidersConfig'",
      "suggested_fix": "Add the missing 'jan' property to the test configuration object with appropriate test values",
      "category": "Missing Required Property",
      "severity": "error"
    }
  ],
  "summary": {
    "total_errors": 10,
    "files_with_errors": 4,
    "error_categories": {
      "Missing Property": 7,
      "Variable Name": 1,
      "Missing Required Property": 2
    },
    "most_problematic_file": "src/components/MessageWithThinking.tsx",
    "compilation_status": "failed"
  },
  "recommendations": [
    {
      "priority": "high",
      "file": "src/components/MessageWithThinking.tsx",
      "action": "Define proper interface/type for tool objects that includes optional 'error' and 'result' properties"
    },
    {
      "priority": "medium",
      "file": "src/services/providers/AnthropicProvider.ts",
      "action": "Fix variable name from 'settings' to '_settings' as suggested by compiler"
    },
    {
      "priority": "medium",
      "file": "src/services/settingsService.ts",
      "action": "Add missing 'jan' property to ProvidersConfig type and default configuration"
    },
    {
      "priority": "low",
      "file": "src/tests/settingsReloadBehavior.test.ts",
      "action": "Update test configuration to include missing 'jan' property"
    }
  ]
}
